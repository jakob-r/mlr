language: r
sudo: false
dist: trusty
cache: packages

env:
  global:
    - _R_CHECK_TIMINGS_=0
    - _R_CHECK_FORCE_SUGGESTS_=0
    - _R_CHECK_TESTS_NLINES_=999
    - R_MAX_NUM_DLLS=999
    - WARMUPPKGS='roxygen2 pander mlrMBO purrr mlbench mldr RWeka RWekajars knitr dplyr ggplot2 ranger randomForest kernlab Rfast igraph rjson rmarkdown shiny xgboost xml2'
    secure: "Q0EFbpvBeipqRpCu+gweeTYtEDMmMSxtRQGQfZxQ2fSP0Wugj2K2vpVqnF/EFAF7qXUpvnHYlWTNQy3nQmgXGb3CWiXgXYgmmvg15HxgtbBf3FWi5flPDYZLHajlvz/Xjl4TVfhwHtL5lL68yN4u2dB/KkS4Yw3QCVPsuRtvz3a7S0kBtjamdT+2ULF5ddKHG7/Rrl2IZuS1ugvniYREhmLaL0h73OpYS3jk0OxI8P6pWI7ishcDbsRRGzkxMVWCVOEzoDf4jCmOXyp+Uf2o/qJ1H0Vu5fleEtXGa9ecF0K6kW8JM91TM5DLxjXgeakWTNbqwUsNH5lu0YhDByxMFq2tRT5rBv1vrFhy5edFg2pc/YiEL+4mcjInh/uUE76t9xGClHacuuy879xKzmp918UQT/4B4uB2bE/FC/+5LfYmmAx5HwQwmw38dBIRMPXt6jKtD1yBwQqS7puZwnvmDSYAk66YyEktkPEE8BSVN2zUcLWsfe2r58ZEfzhh8XHWpGpsoKFVu8d4ycrwv76SebtoWCu7GklxGW5A/lySzi5kz9iR+z0Avv3COmBiZ62yL0zH4g6tUlPYcep+juRC3+f+AnNpKxVxENHxmlB7cZHYUnX+b5lIpqi1gomcvmBVBYawV1IPGkpv5F3vWE4nbT97x1+Wljy+gW7kVyEyIBQ="


addons:
  apt:
    packages:
      - libgmp-dev
      - libgsl0-dev
      - ghostscript # for mlr-tutorial pdf
      - imagemagick # for pkgdown favicon

warnings_are_errors: true
r_check_args: "--as-cran --run-donttest"

r_github_packages:
  - berndbischl/BBmisc
  - berndbischl/parallelMap
  - berndbischl/ParamHelpers
  - jimhester/lintr

jobs:
  include:
    - stage: warmup-1
      install:
        - Rscript -e 'if (length(find.package("devtools", quiet = TRUE)) == 0) install.packages("devtools")'
        - Rscript -e 'devtools::install_deps()'
        - Rscript -e 'pkgs = trimws(strsplit(Sys.getenv("WARMUPPKGS"), " ")[[1]]); pkgs = pkgs[!pkgs %in% installed.packages()]; if (length(pkgs) > 0) install.packages(pkgs)'
      script: true
    - stage: warmup-2
      install:
        - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
      script: true
    - stage: check
      before_script:
        - java -cp $HOME/R/Library/RWekajars/java/weka.jar weka.core.WekaPackageManager -install-package thirdparty/XMeans1.0.4.zip
        - R --no-save <<< 'library("devtools"); document()'
      script:
        - R CMD build .
        - travis_wait 100 R CMD check mlr*.tar.gz --as-cran --run-donttest
        - grep -q -R "WARNING" "mlr.Rcheck/00check.log" ; [ $? -ne 0 ]
      after_script:
        - ../../travis-tool.sh dump_logs
      after_success:
        - 'if [[ "$TRAVIS_PULL_REQUEST" == "false" && "$TRAVIS_BRANCH" == "master" && "${TRAVIS_R_VERSION_STRING}" == "release" ]]; then
            git checkout master;
            export TRAVIS_COMMIT_MSG="$(git log --format=%B --no-merges -n 1)";
            R --no-save <<< "library("devtools"); document()";
            ./thirdparty/gen_families.sh > man/mlrFamilies.Rd;
            git config --global user.name "Travis CI";
            git config --global user.email "$COMMIT_AUTHOR_EMAIL";
            git config --global credential.helper "store --file=.git/credentials";
            bash inst/convert_to_ascii_news.sh;
            echo "https://$GH_TOKEN:@github.com" >> .git/credentials;
            git config --global push.default matching;
            git add --force NEWS;
            git add --force man/*;
            git commit man DESCRIPTION NAMESPACE NEWS -m "update auto-generated documentation [ci skip]" || true;
            git push;
          fi;'
    - stage: Tutorial
      env: TUTORIAL=HTML
      pandoc_version: 2.1.2
      install:
        - Rscript -e 'if (length(find.package("remotes", quiet = TRUE)) == 0) install.packages("remotes")' # needed for tic
        - Rscript -e 'if (length(find.package("magick", quiet = TRUE)) == 0) install.packages("magick")' # favicon creation
        - Rscript -e 'devtools::install_deps(upgrade = TRUE, dependencies = TRUE)'
        # we need rmarkdown and pander for building the tutorial sites
        - Rscript -e 'install.packages(c("rmarkdown", "pander"))'
        # for some reason we need to install from github as 'R CMD BUILD' results in build errors of the PDF
        - Rscript -e 'devtools::install_github("mlr-org/mlr")'
        - Rscript -e 'devtools::install_github("pat-s/pkgdown@cc1579abcf00cb11bc856e48f3b9d3c91432c2c2")'
      script:
        - 'if [[ "$TRAVIS_PULL_REQUEST" == "false" && "$TRAVIS_BRANCH" == "master" && "${TRAVIS_R_VERSION_STRING}" == "release" ]]; then
            R --no-save <<< "devtools::install(); pkgdown::build_site()";
            git checkout master;
            export TRAVIS_COMMIT_MSG="$(git log --format=%B --no-merges -n 1)";
            git add --force docs/*;
            git rm -r --cached $(find . -type d -name "*_cache");
            git commit man -m "update auto-generated documentation [ci skip]" -m "$TRAVIS_COMMIT_MSG" || true;
            git push;
          fi;'
      deploy:
         provider: script
         script: R -q -e 'tic::deploy()'
         on:
           branch: master
           condition: $TRAVIS_PULL_REQUEST = false
    - stage: Tutorial
      env: TUTORIAL=PDF
      pandoc_version: 2.1.2
      install:
      script:
        - 'if [[ "$TRAVIS_PULL_REQUEST" == "false" && "$TRAVIS_BRANCH" == "master" && "${TRAVIS_R_VERSION_STRING}" == "release" ]]; then
            git checkout master;
            git pull
            export TRAVIS_COMMIT_MSG="$(git log --format=%B --no-merges -n 1)";
            R --nosave <<< 'rmarkdown::render("vignettes/tutorial/devel/pdf/_pdf_wrapper.Rmd")'; # build pdf version
            mv vignettes/tutorial/devel/pdf/_pdf_wrapper.pdf vignettes/tutorial/devel/pdf/mlr-tutorial.pdf;
            git add --force vignettes/tutorial/devel/pdf/mlr-tutorial.pdf;
            git commit -m "update auto-generated tutorial pdf version [ci skip]";
            git push;
          fi;'
